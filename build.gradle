apply plugin:'groovy'
apply plugin:'maven'

configurations {
    deployerJars
}

ant.property(environment:'env')
if(!ant.properties['env.GRADLE_HOME']) throw new Exception('Please set $GRADLE_HOME')

repositories {
  mavenRepo urls: "file://${System.properties['user.home']}/.m2/repository/"
  mavenCentral()
}
dependencies {
  groovy 'org.codehaus.groovy:groovy:1.7.4'
  deployerJars 'org.apache.maven.wagon:wagon-ssh:1.0-beta-2'
  compile fileTree(
    dir:new File(ant.properties['env.GRADLE_HOME'], 'lib').absolutePath, 
    includes:['*.jar']
  )
}

uploadArchives { 
  repositories.mavenDeployer {
    def repoUser = System.properties['sjit.repo.user']
    configuration = configurations.deployerJars
    repository(url: "scp://repo.smokejumperit.com/home/$repoUser/repo.smokejumperit.com/") {
      authentication(
        userName: repoUser,
        privateKey: new File(System.properties['sjit.repo.keyFile']).absolutePath, 
        passphrase: System.properties['sjit.repo.passphrase']
      )
      pom {
        groupId='com.smokejumperit'
        artifactId='gradle-plugins'
        version='0.6-SNAPSHOT'
      }
    }
  } 
} 

task notePlugins << {
  def names = []
  sourceSets.main.allGroovy.matching { 
    include('**/*Plugin.groovy')
    exclude('**/SjitPlugin.groovy')
  }.visit {
    names << it.file.name.replaceFirst(/\.groovy$/, '')
  }

  def resourceDir = (sourceSets.main.resources.srcDirs as List)[0]
  if(!resourceDir) throw new Exception("No resource directory found!")
  ['com', 'smokejumperit', 'gradle'].each { resourceDir = new File(resourceDir, it) }
  resourceDir.mkdirs() // Does nothing if already exists: see API

  new File(resourceDir, 'sjit.plugins').text = names.join("\n")
}
processResources.dependsOn(notePlugins)
